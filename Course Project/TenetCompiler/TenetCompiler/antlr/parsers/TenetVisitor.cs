//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Study/Compilers/Course Project/TenetCompiler/TenetCompiler/antlr\Tenet.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TenetParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ITenetVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] TenetParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.global_scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobal_scope([NotNull] TenetParser.Global_scopeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitScope([NotNull] TenetParser.ScopeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] TenetParser.OperationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.declare_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclare_function([NotNull] TenetParser.Declare_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.define_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefine_function([NotNull] TenetParser.Define_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.define_variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefine_variable([NotNull] TenetParser.Define_variableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.define_constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefine_constant([NotNull] TenetParser.Define_constantContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.function_arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_arguments([NotNull] TenetParser.Function_argumentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.function_body"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_body([NotNull] TenetParser.Function_bodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] TenetParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.call_function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall_function([NotNull] TenetParser.Call_functionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.function_params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_params([NotNull] TenetParser.Function_paramsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.math_operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMath_operation([NotNull] TenetParser.Math_operationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.compare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompare([NotNull] TenetParser.CompareContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.control_flow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControl_flow([NotNull] TenetParser.Control_flowContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile([NotNull] TenetParser.WhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] TenetParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="TenetParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse([NotNull] TenetParser.ElseContext context);
}
